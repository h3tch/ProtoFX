<?xml version='1.0'?>
<FxLexer>
  <Style name='string' fore='#D77763' back='#FFFFFF'/>
  <Style name='operator' fore='#4C6A7E' back='#FFFFFF'/>
  <Style name='braces' fore='#AAAAAA' back='#FFFFFF'/>
  <Style name='punctuation' fore='#808080' back='#FFFFFF'/>
  <Style name='number' fore='#328645' back='#FFFFFF'/>
  <Style name='LineComment' fore='#82A847' back='#FFFFFF'/>
  <Style name='BlockComment' fore='#82A847' back='#FFFFFF'/>
  <Style name='name' fore='#000000' back='#FFFFFF'/>
  <!-- TECH -->
  <Lexer type='tech' lexer='TechLexer'>
    <Style name='type' fore='#3E71FF' back='#FFFFFF'/>
    <Style name='anno' fore='#2FABA7' back='#FFFFFF'/>
    <Keyword style_name='type' name='buffer' hint='buffer [name]'/>
    <Keyword style_name='type' name='csharp' hint='csharp [name]'/>
    <Keyword style_name='type' name='fragoutput' hint='fragoutput [name]'/>
    <Keyword style_name='type' name='image' hint='image [name]'/>
    <Keyword style_name='type' name='instance' hint='instance [name]'/>
    <Keyword style_name='type' name='pass' hint='pass [name]'/>
    <Keyword style_name='type' name='sampler' hint='sampler [name]'/>
    <Keyword style_name='type' name='shader' hint='shader [name] [shader_type]'/>
    <Keyword style_name='type' name='tech' hint='tech [name]'/>
    <Keyword style_name='type' name='text' hint='text [name]'/>
    <Keyword style_name='type' name='texture' hint='texture [name]'/>
    <Keyword style_name='type' name='vertinput' hint='vertinput [name]'/>
    <Keyword style_name='type' name='vertoutput' hint='vertoutput [name]'/>
    <!-- BUFFER -->
    <Lexer type='buffer' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='size' hint='size [bytes]'/>
      <Keyword style_name='command' name='txt' hint='txt [text_name]'/>
      <Keyword style_name='command' name='usage' hint='usage [hint]'/>
      <Keyword style_name='command' name='xml' hint='xml [path]'/>
      <!-- buffer - USAGE -->
      <Lexer type='usage' lexer='CommandLexer'>
        <Style name='argument' fore='#8676CC' back='#FFFFFF'/>
        <Keyword style_name='argument' name='dynamicCopy'/>
        <Keyword style_name='argument' name='dynamicDraw'/>
        <Keyword style_name='argument' name='dynamicRead'/>
        <Keyword style_name='argument' name='staticCopy'/>
        <Keyword style_name='argument' name='staticDraw'/>
        <Keyword style_name='argument' name='staticRead'/>
        <Keyword style_name='argument' name='streamCopy'/>
        <Keyword style_name='argument' name='streamDraw'/>
        <Keyword style_name='argument' name='streamRead'/>
      </Lexer>
    </Lexer>
    <!-- CSHARP -->
    <Lexer type='csharp' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='assembly' hint='assembly [path] {path} {...}'/>
      <Keyword style_name='command' name='file' hint='file [path] {path} {...}'/>
    </Lexer>
    <!-- FRAGOUTPUT -->
    <Lexer type='fragoutput' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='color' hint='color [image_name]'/>
      <Keyword style_name='command' name='depth' hint='depth [image_name]'/>
      <Keyword style_name='command' name='height' hint='height [pixels]'/>
      <Keyword style_name='command' name='width' hint='width [pixels]'/>
    </Lexer>
    <!-- IMAGE -->
    <Lexer type='image' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='format' hint='format [pixel_format]'/>
      <Keyword style_name='command' name='size' hint='size [width] [height] [depth] [length]'/>
      <Keyword style_name='command' name='file' hint='file [path] {path} {...}'/>
      <Keyword style_name='command' name='type' hint='type [texture_type]'/>
      <!-- image - FORMAT -->
      <Lexer type='format' lexer='CommandLexer'>
        <Style name='argument' fore='#8676CC' back='#FFFFFF'/>
        <Keyword style_name='argument' name='depth'/>
        <Keyword style_name='argument' name='depth16'/>
        <Keyword style_name='argument' name='depth24'/>
        <Keyword style_name='argument' name='depth24stencil8'/>
        <Keyword style_name='argument' name='depth32'/>
        <Keyword style_name='argument' name='depth32f'/>
        <Keyword style_name='argument' name='depth32fstencil8'/>
        <Keyword style_name='argument' name='depthstencil'/>
        <Keyword style_name='argument' name='r8'/>
        <Keyword style_name='argument' name='r8i'/>
        <Keyword style_name='argument' name='r8ui'/>
        <Keyword style_name='argument' name='r16'/>
        <Keyword style_name='argument' name='r16i'/>
        <Keyword style_name='argument' name='r16ui'/>
        <Keyword style_name='argument' name='r16f'/>
        <Keyword style_name='argument' name='r32i'/>
        <Keyword style_name='argument' name='r32ui'/>
        <Keyword style_name='argument' name='r32f'/>
        <Keyword style_name='argument' name='rg8'/>
        <Keyword style_name='argument' name='rg8i'/>
        <Keyword style_name='argument' name='rg8ui'/>
        <Keyword style_name='argument' name='rg16'/>
        <Keyword style_name='argument' name='rg16i'/>
        <Keyword style_name='argument' name='rg16ui'/>
        <Keyword style_name='argument' name='rg16f'/>
        <Keyword style_name='argument' name='rg32i'/>
        <Keyword style_name='argument' name='rg32ui'/>
        <Keyword style_name='argument' name='rg32f'/>
        <Keyword style_name='argument' name='rgb8'/>
        <Keyword style_name='argument' name='rgb8i'/>
        <Keyword style_name='argument' name='rgb8ui'/>
        <Keyword style_name='argument' name='rgb16'/>
        <Keyword style_name='argument' name='rgb16i'/>
        <Keyword style_name='argument' name='rgb16ui'/>
        <Keyword style_name='argument' name='rgb16f'/>
        <Keyword style_name='argument' name='rgb32i'/>
        <Keyword style_name='argument' name='rgb32ui'/>
        <Keyword style_name='argument' name='rgb32f'/>
        <Keyword style_name='argument' name='rgba8'/>
        <Keyword style_name='argument' name='rgba8i'/>
        <Keyword style_name='argument' name='rgba8ui'/>
        <Keyword style_name='argument' name='rgba16'/>
        <Keyword style_name='argument' name='rgba16i'/>
        <Keyword style_name='argument' name='rgba16ui'/>
        <Keyword style_name='argument' name='rgba16f'/>
        <Keyword style_name='argument' name='rgba32i'/>
        <Keyword style_name='argument' name='rgba32ui'/>
        <Keyword style_name='argument' name='rgba32f'/>
      </Lexer>
      <!-- image - TYPE -->
      <Lexer type='type' lexer='CommandLexer'>
        <Style name='argument' fore='#8676CC' back='#FFFFFF'/>
        <Keyword style_name='argument' name='texture1D' hint='1D texture'/>
        <Keyword style_name='argument' name='texture2D' hint='2D texture'/>
        <Keyword style_name='argument' name='texture3D' hint='3D texture/volume texture'/>
        <Keyword style_name='argument' name='texture1DArray' hint='1D texture array'/>
        <Keyword style_name='argument' name='texture2DArray' hint='2D texture array'/>
      </Lexer>
    </Lexer>
    <!-- INSTANCE -->
    <Lexer type='instance' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='class' hint='class [csharp_name] [c#_class]'/>
      <Keyword style_name='command' name='name' hint='name [new_name]'/>
    </Lexer>
    <!-- PASS -->
    <Lexer type='pass' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='break'/>
      <Keyword style_name='command' name='comp' hint='comp [shader_name]'/>
      <Keyword style_name='command' name='vert' hint='vert [shader_name]'/>
      <Keyword style_name='command' name='tess' hint='tess [shader_name]'/>
      <Keyword style_name='command' name='eval' hint='eval [shader_name]'/>
      <Keyword style_name='command' name='geom' hint='geom [shader_name]'/>
      <Keyword style_name='command' name='frag' hint='frag [shader_name]'/>
      <Keyword style_name='command' name='compute' hint='Dispatch compute shader call.
&gt; compute [num_group_x] [num_group_y] {num_group_z}
&gt; compute [callbuffer_name]'/>
      <Keyword style_name='command' name='draw' hint='Draw vertex based (possibly indexed) geometry.
&gt; draw [vertinput_name] [primitive_type] [base_vertex] {vertex_count}
       {base_instance} {instance_count}
&gt; draw [vertinput_name] [{indexbuffer_name] [index_type] [primitive_type]
       [base_vertex] [base_index] [index_count] {base_instance} {instance_count}
&gt; draw [vertinput_name] {callbuffer_name} {primitive_type}
       {buffer_offset} {draw_count} {stride}
&gt; draw [vertinput_name] [indexbuffer_name] [index_type] [callbuffer_name]
       [primitive_type] {buffer_offset} {draw_count} {stride}
&gt; draw [vertoutput_name] [primitive_type] {vertoutput_stream} {instance_count}

primitive_type
    points, lines, lineLoop, lineStrip, triangles, triangleStrip, triangleFan, patch,
    linesAdjacency, lineStripAdjacency, trianglesAdjacency, triangleStripAdjacency
index_type
    ubyte, ushort, uint'/>
      <Keyword style_name='command' name='fragout' hint='fragout [fragoutput_name]'/>
      <Keyword style_name='command' name='vertout' hint='vertout [vertoutput_name] [output_primitive_type] {write_mode} [output_varying_name]
The optional argument [write_mode] can be "gl_SeparateAttribs" (write every
[output_varying_name] to a new buffer) or the default "gl_InterleavedAttribs"
(output varyings for different buffers need to be separated by "gl_NextBuffer")'/>
      <Keyword style_name='command' name='tex' hint='Bind or unbind a texture from a texture unit.
&gt; tex [texture_name] [unit] -- bind to unit
&gt; tex [unit]                -- unbind unit'/>
      <Keyword style_name='command' name='img' hint='Bind or unbind a texture from an image unit.
&gt; img [texture_name] [unit] [level] [layer] [access] [format] -- bind to unit
&gt; img [unit]                                                  -- unbind unit'/>
      <!-- pass - DRAW -->
      <Lexer type='draw' lexer='CommandLexer'>
        <Style name='argument' fore='#8676CC' back='#FFFFFF'/>
        <Keyword style_name='argument' name='lineLoop'/>
        <Keyword style_name='argument' name='lineLoop'/>
        <Keyword style_name='argument' name='lines'/>
        <Keyword style_name='argument' name='linesAdjacency'/>
        <Keyword style_name='argument' name='lineStrip'/>
        <Keyword style_name='argument' name='lineStripAdjacency'/>
        <Keyword style_name='argument' name='patch'/>
        <Keyword style_name='argument' name='points'/>
        <Keyword style_name='argument' name='triangleFan'/>
        <Keyword style_name='argument' name='triangles'/>
        <Keyword style_name='argument' name='trianglesAdjacency'/>
        <Keyword style_name='argument' name='triangleStrip'/>
        <Keyword style_name='argument' name='triangleStripAdjacency'/>
        <Keyword style_name='argument' name='ubyte' hint='index buffer type is unsigned byte'/>
        <Keyword style_name='argument' name='uint' hint='index buffer type is unsigned integer'/>
        <Keyword style_name='argument' name='ushort' hint='index buffer type is unsigned short'/>
      </Lexer>
      <!-- pass - VERTOUT -->
      <Lexer type='vertout' lexer='CommandLexer'>
        <Style name='argument' fore='#8676CC' back='#FFFFFF'/>
        <Keyword style_name='argument' name='lines'/>
        <Keyword style_name='argument' name='points'/>
        <Keyword style_name='argument' name='triangles'/>
      </Lexer>
    </Lexer>
    <!-- SAMPLER -->
    <Lexer type='sampler' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='magfilter' hint='magfilter [filter_type]'/>
      <Keyword style_name='command' name='minfilter' hint='minfilter [filter_type]'/>
      <Keyword style_name='command' name='wrap' hint='wrap [wrap_type]'/>
      <!-- sampler - MAGFILTER -->
      <Lexer type='magfilter' lexer='CommandLexer'>
        <Style name='argument' fore='#8676CC' back='#FFFFFF'/>
        <Keyword style_name='argument' name='linear'/>
        <Keyword style_name='argument' name='nearest'/>
      </Lexer>
      <!-- sampler - MINFILTER -->
      <Lexer type='minfilter' lexer='CommandLexer'>
        <Style name='argument' fore='#8676CC' back='#FFFFFF'/>
        <Keyword style_name='argument' name='linear'/>
        <Keyword style_name='argument' name='nearest'/>
        <Keyword style_name='argument' name='linearMipmapLinear'/>
        <Keyword style_name='argument' name='linearMipmapNearest'/>
        <Keyword style_name='argument' name='nearestMipmapLinear'/>
        <Keyword style_name='argument' name='nearestMipmapNearest'/>
      </Lexer>
      <!-- sampler - WRAP -->
      <Lexer type='wrap' lexer='CommandLexer'>
        <Style name='argument' fore='#8676CC' back='#FFFFFF'/>
        <Keyword style_name='argument' name='clampToBorder'/>
        <Keyword style_name='argument' name='clampToEdge'/>
        <Keyword style_name='argument' name='mirroredRepeat'/>
        <Keyword style_name='argument' name='repeat'/>
      </Lexer>
    </Lexer>
    <!-- TECH -->
    <Lexer type='tech' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='pass' hint='Execute this pass every frame.&#xA;  pass [name]'/>
      <Keyword style_name='command' name='init' hint='Execute this pass only once&#xA;before all "normal" passes.&#xA;  init [name]'/>
      <Keyword style_name='command' name='uninit' hint='Execute this pass only once&#xA;before the technique is destroyed.&#xA;  uninit [name]'/>
    </Lexer>
    <!-- TEXT -->
    <Lexer type='text' lexer='DefaultLexer'/>
    <!-- TEXTURE -->
    <Lexer type='texture' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='buff' hint='buff [name]'/>
      <Keyword style_name='command' name='img' hint='img [name]'/>
      <Keyword style_name='command' name='samp' hint='samp [name]'/>
    </Lexer>
    <!-- VERTINPUT -->
    <Lexer type='vertinput' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='attr' hint='attr [buff_name] [type] [dim] {stride} {offset} {divisor}'/>
      <!-- vertinput - ATTR -->
      <Lexer type='attr' lexer='CommandLexer'>
        <Style name='argument' fore='#8676CC' back='#FFFFFF'/>
        <Keyword style_name='argument' name='byte'/>
        <Keyword style_name='argument' name='double'/>
        <Keyword style_name='argument' name='float'/>
        <Keyword style_name='argument' name='int'/>
        <Keyword style_name='argument' name='short'/>
        <Keyword style_name='argument' name='ubyte'/>
        <Keyword style_name='argument' name='uint'/>
        <Keyword style_name='argument' name='unsignedByte'/>
        <Keyword style_name='argument' name='unsignedInt'/>
        <Keyword style_name='argument' name='unsignedShort'/>
        <Keyword style_name='argument' name='ushort'/>
      </Lexer>
    </Lexer>
    <!-- VERTOUTPUT -->
    <Lexer type='vertoutput' lexer='BlockLexer'>
      <Style name='command' fore='#58AFEA' back='#FFFFFF'/>
      <Keyword style_name='command' name='buff' hint='buff [name]'/>
      <Keyword style_name='command' name='pause' hint='pause [true|false]'/>
      <Keyword style_name='command' name='resume' hint='resume [true|false]'/>
    </Lexer>
    <!-- SHADER -->
    <Lexer type='shader' lexer='GlslLexer'>
      <Style name='keyword' fore='#3E71FF' back='#FFFFFF'/>
      <Style name='datatype' fore='#8676CC' back='#FFFFFF'/>
      <Style name='preprocessor' fore='#A0A0A0' back='#FFFFFF'/>
      <Keyword style_name='keyword' name='in'/>
      <Keyword style_name='keyword' name='out'/>
      <Keyword style_name='keyword' name='const'/>
      <Keyword style_name='keyword' name='layout'/>
      <Keyword style_name='keyword' name='uniform'/>
      <Keyword style_name='keyword' name='struct'/>
      <Keyword style_name='keyword' name='image1D' hint='1D image binding unit'/>
      <Keyword style_name='keyword' name='image1DArray' hint='1D image array binding unit'/>
      <Keyword style_name='keyword' name='image2D' hint='2D image binding unit'/>
      <Keyword style_name='keyword' name='image2DArray' hint='2D image array binding unit'/>
      <Keyword style_name='keyword' name='image2DMS' hint='2D multi-sample image binding unit'/>
      <Keyword style_name='keyword' name='image2DMSArray' hint='2D multi-sample image array binding unit'/>
      <Keyword style_name='keyword' name='image2DRect' hint='2D rectangular image array binding unit'/>
      <Keyword style_name='keyword' name='image3D' hint='3D image array binding unit'/>
      <Keyword style_name='keyword' name='imageBuffer' hint='buffer image binding unit'/>
      <Keyword style_name='keyword' name='imageCube' hint='cube map image binding unit'/>
      <Keyword style_name='keyword' name='imageCubeArray' hint='cube map image array binding unit'/>
      <Keyword style_name='keyword' name='isampler1D' hint='1D texture binding unit for integer textures'/>
      <Keyword style_name='keyword' name='isampler1DArray' hint='1D texture array binding unit for integer textures'/>
      <Keyword style_name='keyword' name='isampler2D' hint='2D texture binding unit for integer textures'/>
      <Keyword style_name='keyword' name='isampler2DArray' hint='2D texture array binding unit for integer textures'/>
      <Keyword style_name='keyword' name='isampler2DMS' hint='2D multi sample texture binding unit for integer textures'/>
      <Keyword style_name='keyword' name='isampler2DMSArray' hint='2D multi sample texture array binding unit for integer textures'/>
      <Keyword style_name='keyword' name='isampler2DRect' hint='2D rectangular texture binding unit for integer textures'/>
      <Keyword style_name='keyword' name='isampler3D' hint='3D texture binding unit for integer textures'/>
      <Keyword style_name='keyword' name='isamplerBuffer' hint='buffer texture binding unit for integer textures'/>
      <Keyword style_name='keyword' name='isamplerCube' hint='cube map texture binding unit for integer textures'/>
      <Keyword style_name='keyword' name='isamplerCubeArray' hint='cube map texture array binding unit for integer textures'/>
      <Keyword style_name='keyword' name='sampler1D' hint='1D texture binding unit'/>
      <Keyword style_name='keyword' name='sampler1DArray' hint='1D texture array binding unit'/>
      <Keyword style_name='keyword' name='sampler1DArrayShadow' hint='1D shadow texture array binding unit'/>
      <Keyword style_name='keyword' name='sampler1DShadow' hint='1D shadow texture binding unit'/>
      <Keyword style_name='keyword' name='sampler2D' hint='2D texture binding unit'/>
      <Keyword style_name='keyword' name='sampler2DArray' hint='2D texture array binding unit'/>
      <Keyword style_name='keyword' name='sampler2DArrayShadow' hint='2D shadow texture array binding unit'/>
      <Keyword style_name='keyword' name='sampler2DMS' hint='2D multi-sample texture binding unit'/>
      <Keyword style_name='keyword' name='sampler2DMSArray' hint='2D multi-sample texture array binding unit'/>
      <Keyword style_name='keyword' name='sampler2DRect' hint='2D rectangular texture array binding unit'/>
      <Keyword style_name='keyword' name='sampler2DRectShadow' hint='2D rectangular shadow texture array binding unit'/>
      <Keyword style_name='keyword' name='sampler2DShadow' hint='2D shadow texture binding unit'/>
      <Keyword style_name='keyword' name='sampler3D' hint='3D texture array binding unit'/>
      <Keyword style_name='keyword' name='samplerBuffer' hint='buffer texture binding unit'/>
      <Keyword style_name='keyword' name='samplerCube' hint='cube map binding unit'/>
      <Keyword style_name='keyword' name='samplerCubeArray' hint='cube map array binding unit'/>
      <Keyword style_name='keyword' name='samplerCubeArrayShadow' hint='shadow cube map array binding unit'/>
      <Keyword style_name='keyword' name='samplerCubeShadow' hint='shadow cube map binding unit'/>
      <Keyword style_name='datatype' name='void'/>
      <Keyword style_name='datatype' name='bool'/>
      <Keyword style_name='datatype' name='int'/>
      <Keyword style_name='datatype' name='uint'/>
      <Keyword style_name='datatype' name='float'/>
      <Keyword style_name='datatype' name='atomic_uint'/>
      <Keyword style_name='datatype' name='bvec2'/>
      <Keyword style_name='datatype' name='bvec3'/>
      <Keyword style_name='datatype' name='bvec4'/>
      <Keyword style_name='datatype' name='ivec2'/>
      <Keyword style_name='datatype' name='ivec3'/>
      <Keyword style_name='datatype' name='ivec4'/>
      <Keyword style_name='datatype' name='uvec2'/>
      <Keyword style_name='datatype' name='uvec3'/>
      <Keyword style_name='datatype' name='uvec4'/>
      <Keyword style_name='datatype' name='vec2'/>
      <Keyword style_name='datatype' name='vec3'/>
      <Keyword style_name='datatype' name='vec4'/>
      <Keyword style_name='datatype' name='dvec2'/>
      <Keyword style_name='datatype' name='dvec3'/>
      <Keyword style_name='datatype' name='dvec4'/>
      <Keyword style_name='datatype' name='mat2'/>
      <Keyword style_name='datatype' name='mat2x2'/>
      <Keyword style_name='datatype' name='mat2x3'/>
      <Keyword style_name='datatype' name='mat2x4'/>
      <Keyword style_name='datatype' name='mat3'/>
      <Keyword style_name='datatype' name='mat3x2'/>
      <Keyword style_name='datatype' name='mat3x3'/>
      <Keyword style_name='datatype' name='mat3x4'/>
      <Keyword style_name='datatype' name='mat4'/>
      <Keyword style_name='datatype' name='mat4x2'/>
      <Keyword style_name='datatype' name='mat4x3'/>
      <Keyword style_name='datatype' name='mat4x4'/>
      <Keyword style_name='datatype' name='dmat2'/>
      <Keyword style_name='datatype' name='dmat2x2'/>
      <Keyword style_name='datatype' name='dmat2x3'/>
      <Keyword style_name='datatype' name='dmat2x4'/>
      <Keyword style_name='datatype' name='dmat3'/>
      <Keyword style_name='datatype' name='dmat3x2'/>
      <Keyword style_name='datatype' name='dmat3x3'/>
      <Keyword style_name='datatype' name='dmat3x4'/>
      <Keyword style_name='datatype' name='dmat4'/>
      <Keyword style_name='datatype' name='dmat4x2'/>
      <Keyword style_name='datatype' name='dmat4x3'/>
      <Keyword style_name='datatype' name='dmat4x4'/>
      <Lexer type='layout' lexer='DefaultLexer'/>
      <Lexer type='struct' lexer='DefaultLexer'/>
      <Lexer type='function' lexer='DefaultLexer'/>
    </Lexer>
  </Lexer>
  <!-- DEFAULT COMMAND LEXER-->
  <DefaultLexer type='default' lexer='DefaultLexer'/>
</FxLexer>