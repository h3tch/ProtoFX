/////////////
// BUFFERS //
/////////////

buffer buff_pos {
	usage staticDraw
	file "geom/cube.xml|position"
}

buffer buff_uv {
	usage staticDraw
	file "geom/cube.xml|uv"
}

buffer buf_idx {
	usage staticDraw
	file "geom/cube.xml|index"
}

image img_lena {
	type texture2D
	file "tex/lena.jpg"
}

/////////////////////
// BUFFER BINDINGS //
/////////////////////

vertinput in_vert {
	attr buff_pos float 4
	attr buff_uv float 2
}

texture tex_lena {
	img img_lena
}

/////////////
// SHADERS //
/////////////

shader vert vs_simple {
	#version 440
	
	// the camera view matrix (set by GLED)
	uniform mat4 g_view;
	// the camera projection matrix (set by GLED)
	uniform mat4 g_proj;
	
	// vertex input as specified by 'in_vert'
	layout(location = 0) in vec4 in_pos;
	layout(location = 1) in vec2 in_uv;

	// vertex shader output
	layout(location = 0) out vec2 vs_uv;
	
	void main ()
	{
		gl_Position = g_proj * g_view * in_pos;
		vs_uv = in_uv;
	}
}

shader frag fs_simple {
	#version 440
    
	layout(binding = 0) uniform sampler2D tex;
	
	layout(location = 0) in vec2 gs_uv;
	out vec4 color;
	
	void main ()
	{
		color = texture(tex, gs_uv);
	}
}

/////////////
// PROGRAM //
/////////////

csharp cs_util {
	file "util/SimpleCamera.cs"
}

pass pass_render {
	// attach shaders
	vert vs_simple
	frag fs_simple
    
	tex tex_lena 0
	
	// set clear color
	ClearColor 0.1 0.3 1.0 0.0
	// clear color and depth buffer
	Clear ColorDepthBit
	// enable depth buffer test
	Enable depthTest
	
	// execute camera code
	exec cs_util util.SimpleCamera 60 0.1 100 0 0 5
	
	// draw cube
	draw buf_idx in_vert ushort triangles 0 0 36
}

tech tech_simple {
	pass pass_render
}